$date
	Thu Aug 28 21:30:32 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 1 # control $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module b $end
$var wire 1 # control $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( y_xor [3:0] $end
$var wire 4 ) s [3:0] $end
$var wire 1 " cout $end
$var wire 1 * c3 $end
$var wire 1 + c2 $end
$var wire 1 , c1 $end
$var wire 1 - c0 $end
$scope module fa0 $end
$var wire 1 # cin $end
$var wire 1 - cout $end
$var wire 1 . s $end
$var wire 1 / x $end
$var wire 1 0 y $end
$upscope $end
$scope module fa1 $end
$var wire 1 - cin $end
$var wire 1 , cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module fa2 $end
$var wire 1 , cin $end
$var wire 1 + cout $end
$var wire 1 4 s $end
$var wire 1 5 x $end
$var wire 1 6 y $end
$upscope $end
$scope module fa3 $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 7 s $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
19
18
07
06
15
14
03
12
11
10
0/
1.
0-
0,
0+
1*
b111 )
b1001 (
b1001 '
b1110 &
b1001 %
b1110 $
0#
1"
b111 !
$end
#20
1+
1,
01
0"
1-
0*
0.
04
b1000 !
b1000 )
17
16
09
b101 (
1/
05
08
b101 %
b101 '
b11 $
b11 &
#40
0-
01
14
07
1*
00
13
0/
15
18
b110 (
0"
b101 !
b101 )
1.
b1001 %
b1001 '
b1110 $
b1110 &
1#
#60
0+
1"
11
0.
1-
14
b1110 !
b1110 )
17
0*
06
19
b1010 (
1/
05
08
b101 %
b101 '
b11 $
b11 &
#80
