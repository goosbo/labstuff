$date
	Fri Sep 19 10:54:20 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 16 ! y [15:0] $end
$var reg 1 " en $end
$var reg 4 # w [3:0] $end
$scope module d $end
$var wire 1 " en $end
$var wire 4 $ w [3:0] $end
$var wire 16 % y [15:0] $end
$var wire 4 & e [3:0] $end
$scope module d0 $end
$var wire 1 " en $end
$var wire 2 ' w [1:0] $end
$var reg 4 ( y [3:0] $end
$upscope $end
$scope module d1 $end
$var wire 1 ) en $end
$var wire 2 * w [1:0] $end
$var reg 4 + y [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 , en $end
$var wire 2 - w [1:0] $end
$var reg 4 . y [3:0] $end
$upscope $end
$scope module d3 $end
$var wire 1 / en $end
$var wire 2 0 w [1:0] $end
$var reg 4 1 y [3:0] $end
$upscope $end
$scope module d4 $end
$var wire 1 2 en $end
$var wire 2 3 w [1:0] $end
$var reg 4 4 y [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 4
b0 3
02
b1111 1
b0 0
0/
b1111 .
b0 -
0,
b1111 +
b0 *
0)
b1111 (
b0 '
b1111 &
b1111111111111111 %
b0 $
b0 #
0"
b1111111111111111 !
$end
#5
b1 *
b1 -
b1 0
b1 3
b1 #
b1 $
#10
b10 *
b10 -
b10 0
b10 3
b10 #
b10 $
#15
b11 *
b11 -
b11 0
b11 3
b11 #
b11 $
#20
b1 '
b0 *
b0 -
b0 0
b0 3
b100 #
b100 $
#25
b1 *
b1 -
b1 0
b1 3
b101 #
b101 $
#30
b10 *
b10 -
b10 0
b10 3
b110 #
b110 $
#35
b11 *
b11 -
b11 0
b11 3
b111 #
b111 $
#40
b10 '
b0 *
b0 -
b0 0
b0 3
b1000 #
b1000 $
#45
b1 *
b1 -
b1 0
b1 3
b1001 #
b1001 $
#50
b10 *
b10 -
b10 0
b10 3
b1010 #
b1010 $
#55
b11 *
b11 -
b11 0
b11 3
b1011 #
b1011 $
#60
b11 '
b0 *
b0 -
b0 0
b0 3
b1100 #
b1100 $
#65
b1 *
b1 -
b1 0
b1 3
b1101 #
b1101 $
#70
b10 *
b10 -
b10 0
b10 3
b1110 #
b1110 $
#75
b11 *
b11 -
b11 0
b11 3
b1111 #
b1111 $
#80
b1110 +
1)
b1111111111111110 !
b1111111111111110 %
b1111 4
02
b0 '
b0 *
b0 -
b0 0
b0 3
b1110 &
b1110 (
b0 #
b0 $
1"
#85
b1111111111111101 !
b1111111111111101 %
b1101 +
b1 *
b1 -
b1 0
b1 3
b1 #
b1 $
#90
b1111111111111011 !
b1111111111111011 %
b1011 +
b10 *
b10 -
b10 0
b10 3
b10 #
b10 $
#95
b1111111111110111 !
b1111111111110111 %
b111 +
b11 *
b11 -
b11 0
b11 3
b11 #
b11 $
#100
b1110 .
1,
0)
b1101 &
b1101 (
b1111111111101111 !
b1111111111101111 %
b1111 +
b1 '
b0 *
b0 -
b0 0
b0 3
b100 #
b100 $
#105
b1111111111011111 !
b1111111111011111 %
b1101 .
b1 *
b1 -
b1 0
b1 3
b101 #
b101 $
#110
b1111111110111111 !
b1111111110111111 %
b1011 .
b10 *
b10 -
b10 0
b10 3
b110 #
b110 $
#115
b1111111101111111 !
b1111111101111111 %
b111 .
b11 *
b11 -
b11 0
b11 3
b111 #
b111 $
#120
b1110 1
1/
0,
b1011 &
b1011 (
b1111111011111111 !
b1111111011111111 %
b1111 .
b10 '
b0 *
b0 -
b0 0
b0 3
b1000 #
b1000 $
#125
b1111110111111111 !
b1111110111111111 %
b1101 1
b1 *
b1 -
b1 0
b1 3
b1001 #
b1001 $
#130
b1111101111111111 !
b1111101111111111 %
b1011 1
b10 *
b10 -
b10 0
b10 3
b1010 #
b1010 $
#135
b1111011111111111 !
b1111011111111111 %
b111 1
b11 *
b11 -
b11 0
b11 3
b1011 #
b1011 $
#140
b1110 4
12
0/
b111 &
b111 (
b1110111111111111 !
b1110111111111111 %
b1111 1
b11 '
b0 *
b0 -
b0 0
b0 3
b1100 #
b1100 $
#145
b1101111111111111 !
b1101111111111111 %
b1101 4
b1 *
b1 -
b1 0
b1 3
b1101 #
b1101 $
#150
b1011111111111111 !
b1011111111111111 %
b1011 4
b10 *
b10 -
b10 0
b10 3
b1110 #
b1110 $
#155
b111111111111111 !
b111111111111111 %
b111 4
b11 *
b11 -
b11 0
b11 3
b1111 #
b1111 $
#160
